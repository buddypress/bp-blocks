{"version":3,"sources":["bp-groups/js/dynamic-groups.js"],"names":["url","addQueryArgs","i18n","__","sprintf","wp","template","lodash","bpDynamicGroupsBlock","constructor","settings","blocks","path","root","nonce","forEach","block","i","type","query_args","body","preloaded","groups","length","useTemplate","tmpl","document","querySelector","innerHTML","evaluate","interpolate","escape","variable","loop","container","selector","output","group","created_since","extra","total_member_count","membersCount","parseInt","last_activity_diff","getGroups","blockIndex","fetch","method","headers","then","response","json","data","start","list","closest","querySelectorAll","navItem","addEventListener","event","preventDefault","target","classList","remove","add","newType","getAttribute","window","bpDynamicGroupsSettings","bpDynamicGroupsBlocks","bpDynamicGroups","readyState"],"mappings":"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","file":"dynamic-groups.js","sourceRoot":"../src","sourcesContent":["/**\n * WordPress dependencies\n */\nconst {\n\turl: {\n\t\taddQueryArgs,\n\t},\n\ti18n: {\n\t\t__,\n\t\tsprintf,\n\t},\n} = wp;\n\n/**\n * External dependencies.\n */\nconst {\n\ttemplate,\n} = lodash;\n\n/**\n * Front-end Dynamic Groups block class.\n */\n class bpDynamicGroupsBlock {\n\tconstructor( settings, blocks ) {\n\t\tconst { path, root, nonce } = settings;\n\t\tthis.path = path;\n\t\tthis.root = root;\n\t\tthis.nonce = nonce,\n\t\tthis.blocks = blocks;\n\n\t\tthis.blocks.forEach( ( block, i ) => {\n\t\t\tconst { type } = block.query_args || 'active';\n\t\t\tconst { body } = block.preloaded || [];\n\n\t\t\tthis.blocks[ i ].groups = {\n\t\t\t\t'active': [],\n\t\t\t\t'newest': [],\n\t\t\t\t'popular': [],\n\t\t\t\t'alphabetical': [],\n\t\t\t}\n\n\t\t\tif ( ! this.blocks[ i ].groups[ type ].length && body && body.length ) {\n\t\t\t\tthis.blocks[ i ].groups[ type ] = body;\n\t\t\t}\n\t\t} );\n\t}\n\n\tuseTemplate( tmpl ) {\n\t\tconst options = {\n\t\t\tevaluate:    /<#([\\s\\S]+?)#>/g,\n\t\t\tinterpolate: /\\{\\{\\{([\\s\\S]+?)\\}\\}\\}/g,\n\t\t\tescape:      /\\{\\{([^\\}]+?)\\}\\}(?!\\})/g,\n\t\t\tvariable:    'data'\n\t\t};\n\n\t\treturn template( document.querySelector( '#tmpl-' + tmpl ).innerHTML, options );\n\t}\n\n\tloop( groups = [], container = '', type = 'active' ) {\n\t\tconst tmpl = this.useTemplate( 'bp-dynamic-groups-item' );\n\t\tconst selector = document.querySelector( '#' + container );\n\t\tlet output = '';\n\n\t\tif ( groups && groups.length ) {\n\t\t\tgroups.forEach( ( group ) => {\n\t\t\t\tif ( 'newest' === type && group.created_since ) {\n\t\t\t\t\t/* translators: %s is time elapsed since the group was created */\n\t\t\t\t\tgroup.extra = sprintf( __( 'Created %s', 'buddypress' ), group.created_since );\n\t\t\t\t} else if ( 'popular' === type && group.total_member_count ) {\n\t\t\t\t\tconst membersCount = parseInt( group.total_member_count, 10 );\n\n\t\t\t\t\tif ( 0 === membersCount ) {\n\t\t\t\t\t\tgroup.extra = __( 'No members', 'buddypress' );\n\t\t\t\t\t} else if ( 1 === membersCount ) {\n\t\t\t\t\t\tgroup.extra = __( '1 member', 'buddypress' );\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/* translators: %s is the number of Group members (more than 1). */\n\t\t\t\t\t\tgroup.extra = sprintf( __( '%s members', 'buddypress' ), group.total_member_count );\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t/* translators: %s: a human time diff. */\n\t\t\t\t\tgroup.extra = sprintf( __( 'Active %s', 'buddypress' ), group.last_activity_diff );\n\t\t\t\t}\n\n\t\t\t\toutput += tmpl( group );\n\t\t\t} );\n\t\t} else {\n\t\t\toutput = '<div class=\"widget-error\">' + __( 'There are no groups to display.', 'buddypress' ) + '</div>';\n\t\t}\n\n\t\tselector.innerHTML = output;\n\t}\n\n\tgetGroups( type = 'active', blockIndex = 0 ) {\n\t\tthis.blocks[ blockIndex ].query_args.type = type;\n\n\t\tif ( this.blocks[ blockIndex ].groups[ type ].length ) {\n\t\t\tthis.loop( this.blocks[ blockIndex ].groups[ type ], this.blocks[ blockIndex ].selector, type );\n\t\t} else {\n\t\t\tfetch( addQueryArgs( this.root + this.path, this.blocks[ blockIndex ].query_args ), {\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: {\n\t\t\t\t\t'X-WP-Nonce' : this.nonce,\n\t\t\t\t}\n\t\t\t} ).then(\n\t\t\t\t( response ) => response.json()\n\t\t\t).then(\n\t\t\t\t( data ) => {\n\t\t\t\t\tthis.blocks[ blockIndex ].groups[ type ] = data;\n\t\t\t\t\tthis.loop( this.blocks[ blockIndex ].groups[ type ], this.blocks[ blockIndex ].selector, type );\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\n\tstart() {\n\t\tthis.blocks.forEach( ( block, i ) => {\n\t\t\tconst { selector } = block;\n\t\t\tconst { type } = block.query_args;\n\t\t\tconst list = document.querySelector( '#' + selector ).closest( '.bp-dynamic-block-container' );\n\n\t\t\t// Get default Block's type groups.\n\t\t\tthis.getGroups( type, i );\n\n\t\t\t// Listen to Block's Nav item clics\n\t\t\tlist.querySelectorAll( '.item-options a' ).forEach( ( navItem ) => {\n\t\t\t\tnavItem.addEventListener( 'click', ( event ) => {\n\t\t\t\t\tevent.preventDefault();\n\n\t\t\t\t\t// Changes the displayed filter.\n\t\t\t\t\tevent.target.closest( '.item-options' ).querySelector( '.selected' ).classList.remove( 'selected' );\n\t\t\t\t\tevent.target.classList.add( 'selected' );\n\n\t\t\t\t\tconst newType = event.target.getAttribute( 'data-bp-sort' );\n\n\t\t\t\t\tif ( newType !== this.blocks[ i ].query_args.type ) {\n\t\t\t\t\t\tthis.getGroups( newType, i );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} );\n\t\t} );\n\t}\n}\n\nconst settings = window.bpDynamicGroupsSettings || {};\nconst blocks = window.bpDynamicGroupsBlocks || [];\nconst bpDynamicGroups = new bpDynamicGroupsBlock( settings, blocks );\n\nif ( 'loading' === document.readyState ) {\n\tdocument.addEventListener( 'DOMContentLoaded', bpDynamicGroups.start() );\n} else {\n\tbpDynamicGroups.start();\n}\n"]}