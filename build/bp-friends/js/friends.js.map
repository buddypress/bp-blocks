{"version":3,"sources":["bp-friends/js/friends.js"],"names":["url","addQueryArgs","wp","template","lodash","bpFriendsBlock","constructor","settings","blocks","path","root","nonce","strings","forEach","block","i","type","query_args","body","preloaded","friends","length","useTemplate","tmpl","document","querySelector","innerHTML","evaluate","interpolate","escape","variable","loop","container","selector","noFriendsFound","output","friend","getFriends","blockIndex","fetch","method","headers","then","response","json","data","start","list","closest","querySelectorAll","navItem","addEventListener","event","preventDefault","target","classList","remove","add","newType","getAttribute","window","bpFriendsSettings","bpFriendsBlocks","bpFriends","readyState"],"mappings":";AAGA,MACCA,KAAK,aACJC,IAEEC,IAKE,SACLC,GACGC,OAKH,MAAMC,EACNC,YAAaC,EAAUC,GAChB,MAAA,KAAEC,EAAF,KAAQC,EAAR,MAAcC,EAAd,QAAqBC,GAAYL,EAClCE,KAAAA,KAAOA,EACPC,KAAAA,KAAOA,EACPC,KAAAA,MAAQA,EACb,KAAKH,OAASA,EACTI,KAAAA,QAAUA,EAEVJ,KAAAA,OAAOK,QAAS,CAAEC,EAAOC,KACvB,MAAA,KAAEC,GAASF,EAAMG,YAAc,UAC/B,KAAEC,GAASJ,EAAMK,WAAa,GAE/BX,KAAAA,OAAQO,GAAIK,QAAU,CAChB,OAAA,GACA,OAAA,GACC,QAAA,KAGL,KAAKZ,OAAQO,GAAIK,QAASJ,GAAOK,QAAUH,GAAQA,EAAKG,SACzDb,KAAAA,OAAQO,GAAIK,QAASJ,GAASE,KAKtCI,YAAaC,GAQLpB,OAAAA,EAAUqB,SAASC,cAAe,SAAWF,GAAOG,UAP3C,CACfC,SAAa,kBACbC,YAAa,0BACbC,OAAa,2BACbC,SAAa,SAMfC,KAAMX,EAAU,GAAIY,EAAY,IACzBT,MAAAA,EAAO,KAAKD,YAAa,mBACzBW,EAAWT,SAASC,cAAe,IAAMO,IACzC,eAAEE,GAAmB,KAAKtB,QAC5BuB,IAAAA,EAAS,GAERf,GAAWA,EAAQC,OACvBD,EAAQP,QAAWuB,IAClBD,GAAUZ,EAAMa,KAGjBD,EAAS,6BAA+BD,EAAiB,SAG1DD,EAASP,UAAYS,EAGtBE,WAAYrB,EAAO,SAAUsB,EAAa,GACpC9B,KAAAA,OAAQ8B,GAAarB,WAAWD,KAAOA,EAEvC,KAAKR,OAAQ8B,GAAalB,QAASJ,GAAOK,OACzCU,KAAAA,KAAM,KAAKvB,OAAQ8B,GAAalB,QAASJ,GAAQ,KAAKR,OAAQ8B,GAAaL,UAEhFM,MAAOtC,EAAc,KAAKS,KAAO,KAAKD,KAAM,KAAKD,OAAQ8B,GAAarB,YAAc,CACnFuB,OAAQ,MACRC,QAAS,CACO,aAAA,KAAK9B,SAElB+B,KACDC,GAAcA,EAASC,QACxBF,KACCG,IACIrC,KAAAA,OAAQ8B,GAAalB,QAASJ,GAAS6B,EACvCd,KAAAA,KAAM,KAAKvB,OAAQ8B,GAAalB,QAASJ,GAAQ,KAAKR,OAAQ8B,GAAaL,YAMpFa,QACMtC,KAAAA,OAAOK,QAAS,CAAEC,EAAOC,KACvB,MAAA,SAAEkB,GAAanB,GACf,KAAEE,GAASF,EAAMG,WACjB8B,EAAOvB,SAASC,cAAe,IAAMQ,GAAWe,QAAS,+BAG1DX,KAAAA,WAAYrB,EAAMD,GAGvBgC,EAAKE,iBAAkB,mBAAoBpC,QAAWqC,IACrDA,EAAQC,iBAAkB,QAAWC,IACpCA,EAAMC,iBAGND,EAAME,OAAON,QAAS,iBAAkBvB,cAAe,aAAc8B,UAAUC,OAAQ,YACvFJ,EAAME,OAAOC,UAAUE,IAAK,YAEtBC,MAAAA,EAAUN,EAAME,OAAOK,aAAc,gBAEtCD,IAAY,KAAKlD,OAAQO,GAAIE,WAAWD,MACvCqB,KAAAA,WAAYqB,EAAS3C,UAQhC,MAAMR,EAAWqD,OAAOC,mBAAqB,GACvCrD,EAASoD,OAAOE,iBAAmB,GACnCC,EAAY,IAAI1D,EAAgBE,EAAUC,GAE3C,YAAcgB,SAASwC,WAC3BxC,SAAS2B,iBAAkB,mBAAoBY,EAAUjB,SAEzDiB,EAAUjB","file":"friends.js","sourceRoot":"../src","sourcesContent":["/**\n * WordPress dependencies\n */\nconst {\n\turl: {\n\t\taddQueryArgs,\n\t},\n} = wp;\n\n/**\n * External dependencies.\n */\nconst {\n\ttemplate,\n} = lodash;\n\n/**\n * Front-end Friends block class.\n */\n class bpFriendsBlock {\n\tconstructor( settings, blocks ) {\n\t\tconst { path, root, nonce, strings } = settings;\n\t\tthis.path = path;\n\t\tthis.root = root;\n\t\tthis.nonce = nonce,\n\t\tthis.blocks = blocks;\n\t\tthis.strings = strings;\n\n\t\tthis.blocks.forEach( ( block, i ) => {\n\t\t\tconst { type } = block.query_args || 'active';\n\t\t\tconst { body } = block.preloaded || [];\n\n\t\t\tthis.blocks[ i ].friends = {\n\t\t\t\t'active': [],\n\t\t\t\t'newest': [],\n\t\t\t\t'popular': [],\n\t\t\t}\n\n\t\t\tif ( ! this.blocks[ i ].friends[ type ].length && body && body.length ) {\n\t\t\t\tthis.blocks[ i ].friends[ type ] = body;\n\t\t\t}\n\t\t} );\n\t}\n\n\tuseTemplate( tmpl ) {\n\t\tconst options = {\n\t\t\tevaluate:    /<#([\\s\\S]+?)#>/g,\n\t\t\tinterpolate: /\\{\\{\\{([\\s\\S]+?)\\}\\}\\}/g,\n\t\t\tescape:      /\\{\\{([^\\}]+?)\\}\\}(?!\\})/g,\n\t\t\tvariable:    'data'\n\t\t};\n\n\t\treturn template( document.querySelector( '#tmpl-' + tmpl ).innerHTML, options );\n\t}\n\n\tloop( friends = [], container = '' ) {\n\t\tconst tmpl = this.useTemplate( 'bp-friends-item' );\n\t\tconst selector = document.querySelector( '#' + container );\n\t\tconst { noFriendsFound } = this.strings;\n\t\tlet output = '';\n\n\t\tif ( friends && friends.length ) {\n\t\t\tfriends.forEach( ( friend ) => {\n\t\t\t\toutput += tmpl( friend);\n\t\t\t} );\n\t\t} else {\n\t\t\toutput = '<div class=\"widget-error\">' + noFriendsFound + '</div>';\n\t\t}\n\n\t\tselector.innerHTML = output;\n\t}\n\n\tgetFriends( type = 'active', blockIndex = 0 ) {\n\t\tthis.blocks[ blockIndex ].query_args.type = type;\n\n\t\tif ( this.blocks[ blockIndex ].friends[ type ].length ) {\n\t\t\tthis.loop( this.blocks[ blockIndex ].friends[ type ], this.blocks[ blockIndex ].selector );\n\t\t} else {\n\t\t\tfetch( addQueryArgs( this.root + this.path, this.blocks[ blockIndex ].query_args ), {\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: {\n\t\t\t\t\t'X-WP-Nonce' : this.nonce,\n\t\t\t\t}\n\t\t\t} ).then(\n\t\t\t\t( response ) => response.json()\n\t\t\t).then(\n\t\t\t\t( data ) => {\n\t\t\t\t\tthis.blocks[ blockIndex ].friends[ type ] = data;\n\t\t\t\t\tthis.loop( this.blocks[ blockIndex ].friends[ type ], this.blocks[ blockIndex ].selector );\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\n\tstart() {\n\t\tthis.blocks.forEach( ( block, i ) => {\n\t\t\tconst { selector } = block;\n\t\t\tconst { type } = block.query_args;\n\t\t\tconst list = document.querySelector( '#' + selector ).closest( '.bp-dynamic-block-container' );\n\n\t\t\t// Get default Block's type friends.\n\t\t\tthis.getFriends( type, i );\n\n\t\t\t// Listen to Block's Nav item clics\n\t\t\tlist.querySelectorAll( '.item-options a' ).forEach( ( navItem ) => {\n\t\t\t\tnavItem.addEventListener( 'click', ( event ) => {\n\t\t\t\t\tevent.preventDefault();\n\n\t\t\t\t\t// Changes the displayed filter.\n\t\t\t\t\tevent.target.closest( '.item-options' ).querySelector( '.selected' ).classList.remove( 'selected' );\n\t\t\t\t\tevent.target.classList.add( 'selected' );\n\n\t\t\t\t\tconst newType = event.target.getAttribute( 'data-bp-sort' );\n\n\t\t\t\t\tif ( newType !== this.blocks[ i ].query_args.type ) {\n\t\t\t\t\t\tthis.getFriends( newType, i );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} );\n\t\t} );\n\t}\n}\n\nconst settings = window.bpFriendsSettings || {};\nconst blocks = window.bpFriendsBlocks || {};\nconst bpFriends = new bpFriendsBlock( settings, blocks );\n\nif ( 'loading' === document.readyState ) {\n\tdocument.addEventListener( 'DOMContentLoaded', bpFriends.start() );\n} else {\n\tbpFriends.start();\n}\n"]}