{"version":3,"sources":["bp-friends/js/friends.js"],"names":["url","addQueryArgs","i18n","__","_n","sprintf","wp","template","lodash","bpFriendsBlock","constructor","settings","blocks","path","root","nonce","forEach","block","i","type","query_args","body","preloaded","friends","length","useTemplate","tmpl","document","querySelector","innerHTML","evaluate","interpolate","escape","variable","loop","container","selector","output","friend","last_activity","extra","timediff","total_friend_count","registered_since","getFriends","blockIndex","fetch","method","headers","then","response","json","data","start","list","closest","querySelectorAll","navItem","addEventListener","event","preventDefault","target","classList","remove","add","newType","getAttribute","window","bpFriendsSettings","bpFriendsBlocks","bpFriends","readyState"],"mappings":"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","file":"friends.js","sourceRoot":"..\\src","sourcesContent":["/**\n * WordPress dependencies\n */\nconst {\n\turl: {\n\t\taddQueryArgs,\n\t},\n\ti18n: {\n\t\t__,\n\t\t_n,\n\t\tsprintf,\n\t},\n} = wp;\n\n/**\n * External dependencies.\n */\nconst {\n\ttemplate,\n} = lodash;\n\n/**\n * Front-end Friends block class.\n */\n class bpFriendsBlock {\n\tconstructor( settings, blocks ) {\n\t\tconst { path, root, nonce } = settings;\n\t\tthis.path = path;\n\t\tthis.root = root;\n\t\tthis.nonce = nonce,\n\t\tthis.blocks = blocks;\n\n\t\tthis.blocks.forEach( ( block, i ) => {\n\t\t\tconst { type } = block.query_args || 'active';\n\t\t\tconst { body } = block.preloaded || [];\n\n\t\t\tthis.blocks[ i ].friends = {\n\t\t\t\t'active': [],\n\t\t\t\t'newest': [],\n\t\t\t\t'popular': [],\n\t\t\t}\n\n\t\t\tif ( ! this.blocks[ i ].friends[ type ].length && body && body.length ) {\n\t\t\t\tthis.blocks[ i ].friends[ type ] = body;\n\t\t\t}\n\t\t} );\n\t}\n\n\tuseTemplate( tmpl ) {\n\t\tconst options = {\n\t\t\tevaluate:    /<#([\\s\\S]+?)#>/g,\n\t\t\tinterpolate: /\\{\\{\\{([\\s\\S]+?)\\}\\}\\}/g,\n\t\t\tescape:      /\\{\\{([^\\}]+?)\\}\\}(?!\\})/g,\n\t\t\tvariable:    'data'\n\t\t};\n\n\t\treturn template( document.querySelector( '#tmpl-' + tmpl ).innerHTML, options );\n\t}\n\n\tloop( friends = [], container = '', type = 'active' ) {\n\t\tconst tmpl = this.useTemplate( 'bp-friends-item' );\n\t\tconst selector = document.querySelector( '#' + container );\n\t\tlet output = '';\n\n\t\tif ( friends && friends.length ) {\n\t\t\tfriends.forEach( ( friend ) => {\n\t\t\t\tif ( 'active' === type && friend.last_activity ) {\n\t\t\t\t\t/* translators: %s is time elapsed since the registration date happened */\n\t\t\t\t\tfriend.extra = sprintf( __( 'Active %s', 'buddypress' ), friend.last_activity.timediff );\n\t\t\t\t} else if ( 'popular' === type && friend.total_friend_count ) {\n\t\t\t\t\tfriend.extra = sprintf(\n\t\t\t\t\t\t/* translators: %s: total friend count */\n\t\t\t\t\t\t_n( '%s friend', '%s friends', friend.total_friend_count, 'buddypress' ),\n\t\t\t\t\t\tfriend.total_friend_count\n\t\t\t\t\t);\n\t\t\t\t} else if ( 'newest' === type && friend.registered_since ) {\n\t\t\t\t\t/* translators: %s is time elapsed since the last activity happened */\n\t\t\t\t\tfriend.extra = sprintf( __( 'Registered %s', 'buddypress' ), friend.registered_since );\n\t\t\t\t}\n\n\t\t\t\toutput += tmpl( friend);\n\t\t\t} );\n\t\t} else {\n\t\t\toutput = '<div class=\"widget-error\">' + __( 'Sorry, no members were found.', 'buddypress' ) + '</div>';\n\t\t}\n\n\t\tselector.innerHTML = output;\n\t}\n\n\tgetFriends( type = 'active', blockIndex = 0 ) {\n\t\tthis.blocks[ blockIndex ].query_args.type = type;\n\n\t\tif ( this.blocks[ blockIndex ].friends[ type ].length ) {\n\t\t\tthis.loop( this.blocks[ blockIndex ].friends[ type ], this.blocks[ blockIndex ].selector, type );\n\t\t} else {\n\t\t\tfetch( addQueryArgs( this.root + this.path, this.blocks[ blockIndex ].query_args ), {\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: {\n\t\t\t\t\t'X-WP-Nonce' : this.nonce,\n\t\t\t\t}\n\t\t\t} ).then(\n\t\t\t\t( response ) => response.json()\n\t\t\t).then(\n\t\t\t\t( data ) => {\n\t\t\t\t\tthis.blocks[ blockIndex ].friends[ type ] = data;\n\t\t\t\t\tthis.loop( this.blocks[ blockIndex ].friends[ type ], this.blocks[ blockIndex ].selector, type );\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\n\tstart() {\n\t\tthis.blocks.forEach( ( block, i ) => {\n\t\t\tconst { selector } = block;\n\t\t\tconst { type } = block.query_args;\n\t\t\tconst list = document.querySelector( '#' + selector ).closest( '.bp-dynamic-block-container' );\n\n\t\t\t// Get default Block's type friends.\n\t\t\tthis.getFriends( type, i );\n\n\t\t\t// Listen to Block's Nav item clics\n\t\t\tlist.querySelectorAll( '.item-options a' ).forEach( ( navItem ) => {\n\t\t\t\tnavItem.addEventListener( 'click', ( event ) => {\n\t\t\t\t\tevent.preventDefault();\n\n\t\t\t\t\t// Changes the displayed filter.\n\t\t\t\t\tevent.target.closest( '.item-options' ).querySelector( '.selected' ).classList.remove( 'selected' );\n\t\t\t\t\tevent.target.classList.add( 'selected' );\n\n\t\t\t\t\tconst newType = event.target.getAttribute( 'data-bp-sort' );\n\n\t\t\t\t\tif ( newType !== this.blocks[ i ].query_args.type ) {\n\t\t\t\t\t\tthis.getFriends( newType, i );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} );\n\t\t} );\n\t}\n}\n\nconst settings = window.bpFriendsSettings || {};\nconst blocks = window.bpFriendsBlocks || {};\nconst bpFriends = new bpFriendsBlock( settings, blocks );\n\nif ( 'loading' === document.readyState ) {\n\tdocument.addEventListener( 'DOMContentLoaded', bpFriends.start() );\n} else {\n\tbpFriends.start();\n}\n"]}