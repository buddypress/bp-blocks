{"version":3,"sources":["bp-members/js/dynamic-members.js"],"names":["url","addQueryArgs","i18n","__","sprintf","wp","template","lodash","bpDynamicMembersBlock","constructor","settings","blocks","path","root","nonce","forEach","block","i","type","query_args","body","preloaded","members","length","useTemplate","tmpl","document","querySelector","innerHTML","evaluate","interpolate","escape","variable","loop","container","selector","output","member","last_activity","extra","timediff","total_friend_count","friendsCount","parseInt","registered_since","getMembers","blockIndex","fetch","method","headers","then","response","json","data","start","list","closest","querySelectorAll","navItem","addEventListener","event","preventDefault","target","classList","remove","add","newType","getAttribute","window","bpDynamicMembersSettings","bpDynamicMembersBlocks","bpDynamicMembers","readyState"],"mappings":";AAGA,MACCA,KAAK,aACJC,GAEDC,MAAM,GACLC,EADK,QAELC,IAEEC,IAKE,SACLC,GACGC,OAKH,MAAMC,EACNC,YAAaC,EAAUC,GAChB,MAAA,KAAEC,EAAF,KAAQC,EAAR,MAAcC,GAAUJ,EACzBE,KAAAA,KAAOA,EACPC,KAAAA,KAAOA,EACPC,KAAAA,MAAQA,EACb,KAAKH,OAASA,EAETA,KAAAA,OAAOI,QAAS,CAAEC,EAAOC,KACvB,MAAA,KAAEC,GAASF,EAAMG,YAAc,UAC/B,KAAEC,GAASJ,EAAMK,WAAa,GAE/BV,KAAAA,OAAQM,GAAIK,QAAU,CAChB,OAAA,GACA,OAAA,GACC,QAAA,KAGL,KAAKX,OAAQM,GAAIK,QAASJ,GAAOK,QAAUH,GAAQA,EAAKG,SACzDZ,KAAAA,OAAQM,GAAIK,QAASJ,GAASE,KAKtCI,YAAaC,GAQLnB,OAAAA,EAAUoB,SAASC,cAAe,SAAWF,GAAOG,UAP3C,CACfC,SAAa,kBACbC,YAAa,0BACbC,OAAa,2BACbC,SAAa,SAMfC,KAAMX,EAAU,GAAIY,EAAY,GAAIhB,EAAO,UACpCO,MAAAA,EAAO,KAAKD,YAAa,2BACzBW,EAAWT,SAASC,cAAe,IAAMO,GAC3CE,IAAAA,EAAS,GAERd,GAAWA,EAAQC,OACvBD,EAAQP,QAAWsB,IACb,GAAA,WAAanB,GAAQmB,EAAOC,cAEhCD,EAAOE,MAAQnC,EAASD,EAAI,YAAa,cAAgBkC,EAAOC,cAAcE,eACxE,GAAK,YAActB,GAAQmB,EAAOI,mBAAqB,CACvDC,MAAAA,EAAeC,SAAUN,EAAOI,mBAAoB,IAGzDJ,EAAOE,MADH,IAAMG,EACKvC,EAAI,aAAc,cACtB,IAAMuC,EACFvC,EAAI,WAAY,cAGhBC,EAASD,EAAI,aAAc,cAAgBkC,EAAOI,wBAEvD,WAAavB,GAAQmB,EAAOO,mBAEvCP,EAAOE,MAAQnC,EAASD,EAAI,gBAAiB,cAAgBkC,EAAOO,mBAGrER,GAAUX,EAAMY,KAGjBD,EAAS,6BAA+BjC,EAAI,oBAAqB,cAAiB,SAGnFgC,EAASP,UAAYQ,EAGtBS,WAAY3B,EAAO,SAAU4B,EAAa,GACpCnC,KAAAA,OAAQmC,GAAa3B,WAAWD,KAAOA,EAEvC,KAAKP,OAAQmC,GAAaxB,QAASJ,GAAOK,OACzCU,KAAAA,KAAM,KAAKtB,OAAQmC,GAAaxB,QAASJ,GAAQ,KAAKP,OAAQmC,GAAaX,SAAUjB,GAE1F6B,MAAO9C,EAAc,KAAKY,KAAO,KAAKD,KAAM,KAAKD,OAAQmC,GAAa3B,YAAc,CACnF6B,OAAQ,MACRC,QAAS,CACO,aAAA,KAAKnC,SAElBoC,KACDC,GAAcA,EAASC,QACxBF,KACCG,IACI1C,KAAAA,OAAQmC,GAAaxB,QAASJ,GAASmC,EACvCpB,KAAAA,KAAM,KAAKtB,OAAQmC,GAAaxB,QAASJ,GAAQ,KAAKP,OAAQmC,GAAaX,SAAUjB,KAM9FoC,QACM3C,KAAAA,OAAOI,QAAS,CAAEC,EAAOC,KACvB,MAAA,SAAEkB,GAAanB,GACf,KAAEE,GAASF,EAAMG,WACjBoC,EAAO7B,SAASC,cAAe,IAAMQ,GAAWqB,QAAS,+BAG1DX,KAAAA,WAAY3B,EAAMD,GAGvBsC,EAAKE,iBAAkB,mBAAoB1C,QAAW2C,IACrDA,EAAQC,iBAAkB,QAAWC,IACpCA,EAAMC,iBAGND,EAAME,OAAON,QAAS,iBAAkB7B,cAAe,aAAcoC,UAAUC,OAAQ,YACvFJ,EAAME,OAAOC,UAAUE,IAAK,YAEtBC,MAAAA,EAAUN,EAAME,OAAOK,aAAc,gBAEtCD,IAAY,KAAKvD,OAAQM,GAAIE,WAAWD,MACvC2B,KAAAA,WAAYqB,EAASjD,UAQhC,MAAMP,EAAW0D,OAAOC,0BAA4B,GAC9C1D,EAASyD,OAAOE,wBAA0B,GAC1CC,EAAmB,IAAI/D,EAAuBE,EAAUC,GAEzD,YAAce,SAAS8C,WAC3B9C,SAASiC,iBAAkB,mBAAoBY,EAAiBjB,SAEhEiB,EAAiBjB","file":"dynamic-members.js","sourceRoot":"../src","sourcesContent":["/**\n * WordPress dependencies\n */\nconst {\n\turl: {\n\t\taddQueryArgs,\n\t},\n\ti18n: {\n\t\t__,\n\t\tsprintf,\n\t},\n} = wp;\n\n/**\n * External dependencies.\n */\nconst {\n\ttemplate,\n} = lodash;\n\n/**\n * Front-end Dynamic Members block class.\n */\n class bpDynamicMembersBlock {\n\tconstructor( settings, blocks ) {\n\t\tconst { path, root, nonce } = settings;\n\t\tthis.path = path;\n\t\tthis.root = root;\n\t\tthis.nonce = nonce,\n\t\tthis.blocks = blocks;\n\n\t\tthis.blocks.forEach( ( block, i ) => {\n\t\t\tconst { type } = block.query_args || 'active';\n\t\t\tconst { body } = block.preloaded || [];\n\n\t\t\tthis.blocks[ i ].members = {\n\t\t\t\t'active': [],\n\t\t\t\t'newest': [],\n\t\t\t\t'popular': [],\n\t\t\t}\n\n\t\t\tif ( ! this.blocks[ i ].members[ type ].length && body && body.length ) {\n\t\t\t\tthis.blocks[ i ].members[ type ] = body;\n\t\t\t}\n\t\t} );\n\t}\n\n\tuseTemplate( tmpl ) {\n\t\tconst options = {\n\t\t\tevaluate:    /<#([\\s\\S]+?)#>/g,\n\t\t\tinterpolate: /\\{\\{\\{([\\s\\S]+?)\\}\\}\\}/g,\n\t\t\tescape:      /\\{\\{([^\\}]+?)\\}\\}(?!\\})/g,\n\t\t\tvariable:    'data'\n\t\t};\n\n\t\treturn template( document.querySelector( '#tmpl-' + tmpl ).innerHTML, options );\n\t}\n\n\tloop( members = [], container = '', type = 'active' ) {\n\t\tconst tmpl = this.useTemplate( 'bp-dynamic-members-item' );\n\t\tconst selector = document.querySelector( '#' + container );\n\t\tlet output = '';\n\n\t\tif ( members && members.length ) {\n\t\t\tmembers.forEach( ( member ) => {\n\t\t\t\tif ( 'active' === type && member.last_activity ) {\n\t\t\t\t\t/* translators: %s: a human time diff. */\n\t\t\t\t\tmember.extra = sprintf( __( 'Active %s', 'buddypress' ), member.last_activity.timediff );\n\t\t\t\t} else if ( 'popular' === type && member.total_friend_count ) {\n\t\t\t\t\tconst friendsCount = parseInt( member.total_friend_count, 10 );\n\n\t\t\t\t\tif ( 0 === friendsCount ) {\n\t\t\t\t\t\tmember.extra = __( 'No friends', 'buddypress' );\n\t\t\t\t\t} else if ( 1 === friendsCount ) {\n\t\t\t\t\t\tmember.extra = __( '1 friend', 'buddypress' );\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/* translators: %s: total friend count (more than 1). */\n\t\t\t\t\t\tmember.extra = sprintf( __( '%s friends', 'buddypress' ), member.total_friend_count );\n\t\t\t\t\t}\n\t\t\t\t} else if ( 'newest' === type && member.registered_since ) {\n\t\t\t\t\t/* translators: %s is time elapsed since the registration date happened */\n\t\t\t\t\tmember.extra = sprintf( __( 'Registered %s', 'buddypress' ), member.registered_since );\n\t\t\t\t}\n\n\t\t\t\toutput += tmpl( member );\n\t\t\t} );\n\t\t} else {\n\t\t\toutput = '<div class=\"widget-error\">' + __( 'No members found.', 'buddypress' ) + '</div>';\n\t\t}\n\n\t\tselector.innerHTML = output;\n\t}\n\n\tgetMembers( type = 'active', blockIndex = 0 ) {\n\t\tthis.blocks[ blockIndex ].query_args.type = type;\n\n\t\tif ( this.blocks[ blockIndex ].members[ type ].length ) {\n\t\t\tthis.loop( this.blocks[ blockIndex ].members[ type ], this.blocks[ blockIndex ].selector, type );\n\t\t} else {\n\t\t\tfetch( addQueryArgs( this.root + this.path, this.blocks[ blockIndex ].query_args ), {\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: {\n\t\t\t\t\t'X-WP-Nonce' : this.nonce,\n\t\t\t\t}\n\t\t\t} ).then(\n\t\t\t\t( response ) => response.json()\n\t\t\t).then(\n\t\t\t\t( data ) => {\n\t\t\t\t\tthis.blocks[ blockIndex ].members[ type ] = data;\n\t\t\t\t\tthis.loop( this.blocks[ blockIndex ].members[ type ], this.blocks[ blockIndex ].selector, type );\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\n\tstart() {\n\t\tthis.blocks.forEach( ( block, i ) => {\n\t\t\tconst { selector } = block;\n\t\t\tconst { type } = block.query_args;\n\t\t\tconst list = document.querySelector( '#' + selector ).closest( '.bp-dynamic-block-container' );\n\n\t\t\t// Get default Block's type members.\n\t\t\tthis.getMembers( type, i );\n\n\t\t\t// Listen to Block's Nav item clics\n\t\t\tlist.querySelectorAll( '.item-options a' ).forEach( ( navItem ) => {\n\t\t\t\tnavItem.addEventListener( 'click', ( event ) => {\n\t\t\t\t\tevent.preventDefault();\n\n\t\t\t\t\t// Changes the displayed filter.\n\t\t\t\t\tevent.target.closest( '.item-options' ).querySelector( '.selected' ).classList.remove( 'selected' );\n\t\t\t\t\tevent.target.classList.add( 'selected' );\n\n\t\t\t\t\tconst newType = event.target.getAttribute( 'data-bp-sort' );\n\n\t\t\t\t\tif ( newType !== this.blocks[ i ].query_args.type ) {\n\t\t\t\t\t\tthis.getMembers( newType, i );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} );\n\t\t} );\n\t}\n}\n\nconst settings = window.bpDynamicMembersSettings || {};\nconst blocks = window.bpDynamicMembersBlocks || {};\nconst bpDynamicMembers = new bpDynamicMembersBlock( settings, blocks );\n\nif ( 'loading' === document.readyState ) {\n\tdocument.addEventListener( 'DOMContentLoaded', bpDynamicMembers.start() );\n} else {\n\tbpDynamicMembers.start();\n}\n"]}